{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/account_gallery/components/media_item.jsx","webpack:///./app/javascript/mastodon/features/account_gallery/index.jsx"],"names":["MediaItem","ImmutablePureComponent","constructor","arguments","state","visible","displayMedia","this","props","attachment","getIn","loaded","handleImageLoad","setState","handleMouseEnter","e","hoverToPlay","target","play","handleMouseLeave","pause","currentTime","handleClick","uri","preventDefault","router","context","history","push","autoPlayGif","indexOf","get","render","displayWidth","width","Math","floor","height","status","title","thumbnail","label","icon","content","includes","_jsx","src","alt","lang","onLoad","Icon","id","x","y","style","objectPosition","className","role","onMouseEnter","onMouseLeave","autoPlay","playsInline","loop","muted","href","onClick","rel","Blurhash","hash","classNames","dummy","useBlurhash","contextTypes","PropTypes","object","propTypes","ImmutablePropTypes","map","isRequired","number","onOpenMedia","func","LoadMoreMedia","handleLoadMore","onLoadMore","maxId","LoadMore","disabled","string","AccountGallery","handleScrollToBottom","hasMore","attachments","size","last","undefined","handleScroll","scrollTop","scrollHeight","clientHeight","isLoading","dispatch","expandAccountMediaTimeline","accountId","handleLoadOlder","handleOpenMedia","statusId","openModal","modalType","modalProps","media","options","index","findIndex","handleRef","c","offsetWidth","_load","isAccount","fetchAccount","componentDidMount","params","acct","lookupAccount","componentDidUpdate","prevProps","multiColumn","blockedBy","suspended","BundleColumnError","errorType","Column","LoadingIndicator","emptyMessage","loadOlder","FormattedMessage","defaultMessage","ColumnBackButton","ScrollContainer","scrollKey","onScroll","HeaderContainer","_jsxs","ref","children","shape","list","bool","connect","mapStateToProps","_ref","normalizeForLookup","getAccountGallery"],"mappings":"yTAWe,MAAMA,UAAkBC,IAAuBC,cAAA,SAAAC,WAAA,KAY5DC,MAAQ,CACNC,QAA0B,aAAjBC,MAAgCC,KAAKC,MAAMC,WAAWC,MAAM,CAAC,SAAU,eAAkC,aAAjBJ,IACjGK,QAAQ,GACR,KAEFC,gBAAkB,KAChBL,KAAKM,SAAS,CAAEF,QAAQ,GAAO,EAC/B,KAEFG,iBAAmBC,IACbR,KAAKS,eACPD,EAAEE,OAAOC,MACX,EACA,KAEFC,iBAAmBJ,IACbR,KAAKS,gBACPD,EAAEE,OAAOG,QACTL,EAAEE,OAAOI,YAAc,EACzB,EACA,KAMFC,YAAc,CAACP,EAAGQ,KAChBR,EAAES,iBACF,MAAM,OAAEC,GAAWlB,KAAKmB,QACxBD,EAAOE,QAAQC,KAAKL,EAAI,CAUxB,CAjBFP,cACE,OAAQa,MAAiF,IAAlE,CAAC,OAAQ,SAASC,QAAQvB,KAAKC,MAAMC,WAAWsB,IAAI,QAC7E,CAiBAC,SACE,MAAM,WAAEvB,EAAU,aAAEwB,GAAiB1B,KAAKC,OACpC,QAAEH,EAAO,OAAEM,GAAWJ,KAAKH,MAE3B8B,EAAYC,KAAKC,OAAOH,EAAe,GAAK,GAAK,EAAvC,KACVI,EAASH,EACTI,EAAS7B,EAAWsB,IAAI,UACxBQ,EAASD,EAAOP,IAAI,iBAAmBtB,EAAWsB,IAAI,eAE5D,IAAIS,EAAWC,EAAOC,EAAMC,EAE5B,GAAKtC,EAME,CACL,GAAI,CAAC,QAAS,SAASuC,SAASnC,EAAWsB,IAAI,SAC7CY,EACEE,YAAA,OACEC,IAAKrC,EAAWsB,IAAI,gBAAkBO,EAAO5B,MAAM,CAAC,UAAW,kBAC/DqC,IAAKtC,EAAWsB,IAAI,eACpBiB,KAAMV,EAAOP,IAAI,YACjBkB,OAAQ1C,KAAKK,kBAKf6B,EAD6B,UAA3BhC,EAAWsB,IAAI,QACTc,YAACK,IAAI,CAACC,GAAG,UAETN,YAACK,IAAI,CAACC,GAAG,cAEd,GAA+B,UAA3B1C,EAAWsB,IAAI,QAAqB,CAC7C,MAEMqB,EAAgC,MAFvB3C,EAAWC,MAAM,CAAC,OAAQ,QAAS,OAAS,GAEhC,EAAK,IAC1B2C,EAAgC,MAFvB5C,EAAWC,MAAM,CAAC,OAAQ,QAAS,OAAS,IAEhC,EAAK,IAEhCiC,EACEE,YAAA,OACEC,IAAKrC,EAAWsB,IAAI,eACpBgB,IAAKtC,EAAWsB,IAAI,eACpBiB,KAAMV,EAAOP,IAAI,YACjBuB,MAAO,CAAEC,eAAiB,GAAEH,MAAMC,MAClCJ,OAAQ1C,KAAKK,iBAGnB,KAAsC,SAA3BH,EAAWsB,IAAI,UACxBY,EACEE,YAAA,SACEW,UAAU,qCACV,aAAY/C,EAAWsB,IAAI,eAC3BQ,MAAO9B,EAAWsB,IAAI,eACtBiB,KAAMV,EAAOP,IAAI,YACjB0B,KAAK,cACLX,IAAKrC,EAAWsB,IAAI,OACpB2B,aAAcnD,KAAKO,iBACnB6C,aAAcpD,KAAKY,iBACnByC,SAAU/B,IACVgC,aAAW,EACXC,MAAI,EACJC,OAAK,IAITtB,EAAQ,OAGVD,EACEK,YAAA,OAAKW,UAAU,4BAAqB,EACjCb,EAEAF,GACCI,YAAA,OAAKW,UAAU,oCAA6B,EAC1CX,YAAA,QAAMW,UAAU,mCAA4B,EAAEf,IAKxD,MApEEC,EACEG,YAAA,QAAMW,UAAU,qCAA8B,EAC5CX,YAACK,IAAI,CAACC,GAAG,eAoEf,OACEN,YAAA,OAAKW,UAAU,wBAAwBF,MAAO,CAAEpB,QAAOG,gBAAS,EAC9DQ,YAAA,KAAGW,UAAU,gCAAgCQ,KAAO,KAAI1B,EAAO5B,MAAM,CAAC,UAAW,YAAY4B,EAAOP,IAAI,QAASkC,QAAUlD,IAAOR,KAAKe,YAAYP,EAAI,KAAIuB,EAAO5B,MAAM,CAAC,UAAW,YAAY4B,EAAOP,IAAI,QAAQ,EAAGQ,MAAOA,EAAOtB,OAAO,SAASiD,IAAI,4BAAqB,EAC3QrB,YAACsB,IAAQ,CACPC,KAAM3D,EAAWsB,IAAI,YACrByB,UAAWa,IAAW,yBAA0B,CAAE,iCAAkChE,GAAWM,IAC/F2D,OAAQC,MAGTlE,EAAUmC,EAAYE,GAI/B,EApJmB1C,EAEZwE,aAAe,CACpB/C,OAAQgD,IAAUC,QAHD1E,EAMZ2E,UAAY,CACjBlE,WAAYmE,IAAmBC,IAAIC,WACnC7C,aAAcwC,IAAUM,OAAOD,WAC/BE,YAAaP,IAAUQ,KAAKH,Y,WCwBhC,MAAMI,UAAsBjF,IAAuBC,cAAA,SAAAC,WAAA,KAOjDgF,eAAiB,KACf5E,KAAKC,MAAM4E,WAAW7E,KAAKC,MAAM6E,MAAM,CACvC,CAEFrD,SACE,OACEa,YAACyC,IAAQ,CACPC,SAAUhF,KAAKC,MAAM+E,SACrBtB,QAAS1D,KAAK4E,gBAGpB,EAlBID,EAEGP,UAAY,CACjBU,MAAOZ,IAAUe,OACjBJ,WAAYX,IAAUQ,KAAKH,YAkB/B,MAAMW,UAAuBxF,IAAuBC,cAAA,SAAAC,WAAA,KAkBlDC,MAAQ,CACN8B,MAAO,KACP,KA6BFwD,qBAAuB,KACjBnF,KAAKC,MAAMmF,SACbpF,KAAK4E,eAAe5E,KAAKC,MAAMoF,YAAYC,KAAO,EAAItF,KAAKC,MAAMoF,YAAYE,OAAOpF,MAAM,CAAC,SAAU,YAASqF,EAChH,EACA,KAEFC,aAAejF,IACb,MAAM,UAAEkF,EAAS,aAAEC,EAAY,aAAEC,GAAiBpF,EAAEE,OAGhD,IAFWiF,EAAeD,EAAYE,IAErB5F,KAAKC,MAAM4F,WAC9B7F,KAAKmF,sBACP,EACA,KAEFP,eAAiBE,IACf9E,KAAKC,MAAM6F,SAASC,YAA2B/F,KAAKC,MAAM+F,UAAW,CAAElB,UAAS,EAChF,KAEFmB,gBAAkBzF,IAChBA,EAAES,iBACFjB,KAAKmF,sBAAsB,EAC3B,KAEFe,gBAAkBhG,IAChB,MAAM,SAAE4F,GAAa9F,KAAKC,MACpBkG,EAAWjG,EAAWC,MAAM,CAAC,SAAU,OACvCsC,EAAOvC,EAAWC,MAAM,CAAC,SAAU,aAEzC,GAA+B,UAA3BD,EAAWsB,IAAI,QACjBsE,EAASM,YAAU,CACjBC,UAAW,QACXC,WAAY,CAAEC,MAAOrG,EAAYiG,WAAU1D,OAAM+D,QAAS,CAAEnD,UAAU,YAEnE,GAA+B,UAA3BnD,EAAWsB,IAAI,QACxBsE,EAASM,YAAU,CACjBC,UAAW,QACXC,WAAY,CAAEC,MAAOrG,EAAYiG,WAAU1D,OAAM+D,QAAS,CAAEnD,UAAU,WAEnE,CACL,MAAMkD,EAAQrG,EAAWC,MAAM,CAAC,SAAU,sBACpCsG,EAAQF,EAAMG,WAAU7D,GAAKA,EAAErB,IAAI,QAAUtB,EAAWsB,IAAI,QAElEsE,EAASM,YAAU,CACjBC,UAAW,QACXC,WAAY,CAAEC,QAAOE,QAAON,WAAU1D,UAE1C,GACA,KAEFkE,UAAYC,IACNA,GACF5G,KAAKM,SAAS,CAAEqB,MAAOiF,EAAEC,aAC3B,CACA,CAjFFC,QACE,MAAM,UAAEd,EAAS,UAAEe,EAAS,SAAEjB,GAAa9F,KAAKC,MAE3C8G,GAAWjB,EAASkB,YAAahB,IACtCF,EAASC,YAA2BC,GACtC,CAEAiB,oBACE,MAAQC,QAAQ,KAAEC,GAAM,UAAEnB,EAAS,SAAEF,GAAa9F,KAAKC,MAEnD+F,EACFhG,KAAK8G,QAELhB,EAASsB,YAAcD,GAE3B,CAEAE,mBAAoBC,GAClB,MAAQJ,QAAQ,KAAEC,GAAM,UAAEnB,EAAS,SAAEF,GAAa9F,KAAKC,MAEnDqH,EAAUtB,YAAcA,GAAaA,EACvChG,KAAK8G,QACIQ,EAAUJ,OAAOC,OAASA,GACnCrB,EAASsB,YAAcD,GAE3B,CA0DA1F,SACE,MAAM,YAAE4D,EAAW,UAAEQ,EAAS,QAAET,EAAO,UAAE2B,EAAS,YAAEQ,EAAW,UAAEC,EAAS,UAAEC,GAAczH,KAAKC,OACzF,MAAE0B,GAAU3B,KAAKH,MAEvB,IAAKkH,EACH,OACEzE,YAACoF,IAAiB,CAACH,YAAaA,EAAaI,UAAU,YAI3D,IAAKtC,GAAeQ,EAClB,OACEvD,YAACsF,IAAM,UACLtF,YAACuF,IAAgB,KAKvB,IAMIC,EANAC,EAAY,KAchB,OAZI3C,GAAaS,GAAkC,IAArBR,EAAYC,OACxCyC,EAAYzF,YAACyC,IAAQ,CAACjF,SAAU+F,EAAWnC,QAAS1D,KAAKiG,mBAKvDwB,EACFK,EAAexF,YAAC0F,IAAgB,CAACpF,GAAE,iCAAkCqF,eAAe,sBAC3ET,IACTM,EAAexF,YAAC0F,IAAgB,CAACpF,GAAE,mCAAoCqF,eAAe,yBAItF3F,YAACsF,IAAM,UACLtF,YAAC4F,IAAgB,CAACX,YAAaA,IAE/BjF,YAAC6F,IAAe,CAACC,UAAU,wBAAiB,EAC1C9F,YAAA,OAAKW,UAAU,8BAA8BoF,SAAUrI,KAAKyF,mBAAa,EACvEnD,YAACgG,IAAe,CAACtC,UAAWhG,KAAKC,MAAM+F,YAErCyB,GAAaD,EACblF,YAAA,OAAKW,UAAU,+BAAwB,EACpC6E,GAGHS,eAAA,OAAKrF,KAAK,OAAOD,UAAU,6BAA6BuF,IAAKxI,KAAK2G,UAAU8B,SAAA,CACzEpD,EAAYf,KAAI,CAACpE,EAAYuG,IAAyB,OAAfvG,EACtCoC,YAACqC,EAAa,CAAoDG,MAAO2B,EAAQ,EAAIpB,EAAYlF,MAAMsG,EAAQ,EAAG,MAAQ,KAAM5B,WAAY7E,KAAK4E,gBAA7H,QAAUS,EAAYlF,MAAMsG,EAAQ,EAAG,OAE3DnE,YAAC7C,EAAS,CAA4BS,WAAYA,EAAYwB,aAAcC,EAAO8C,YAAazE,KAAKkG,iBAArFhG,EAAWsB,IAAI,SAGhCuG,KAIJlC,GAAkC,IAArBR,EAAYC,MACxBhD,YAAA,OAAKW,UAAU,2BAAoB,EACjCX,YAACuF,IAAgB,OAO/B,EA1KI3C,EAEGd,UAAY,CACjB8C,OAAQhD,IAAUwE,MAAM,CACtBvB,KAAMjD,IAAUe,OAChBrC,GAAIsB,IAAUe,SACbV,WACHyB,UAAW9B,IAAUe,OACrBa,SAAU5B,IAAUQ,KAAKH,WACzBc,YAAahB,IAAmBsE,KAAKpE,WACrCsB,UAAW3B,IAAU0E,KACrBxD,QAASlB,IAAU0E,KACnB7B,UAAW7C,IAAU0E,KACrBpB,UAAWtD,IAAU0E,KACrBnB,UAAWvD,IAAU0E,KACrBrB,YAAarD,IAAU0E,MA+JZC,6BAxNSC,CAACjJ,EAAKkJ,KAAgC,IAA5B7B,QAAQ,KAAEC,EAAI,GAAEvE,IAAMmG,EACtD,MAAM/C,EAAYpD,GAAM/C,EAAMM,MAAM,CAAC,eAAgB6I,YAAmB7B,KAExE,OAAKnB,EAME,CACLA,YACAe,YAAalH,EAAMM,MAAM,CAAC,WAAY6F,IACtCX,YAAa4D,YAAkBpJ,EAAOmG,GACtCH,UAAWhG,EAAMM,MAAM,CAAC,YAAc,WAAU6F,UAAmB,cACnEZ,QAASvF,EAAMM,MAAM,CAAC,YAAc,WAAU6F,UAAmB,YACjEyB,UAAW5H,EAAMM,MAAM,CAAC,WAAY6F,EAAW,cAAc,GAC7DwB,UAAW3H,EAAMM,MAAM,CAAC,gBAAiB6F,EAAW,eAAe,IAZ5D,CACLH,WAAW,EAYd,GAuMYgD,CAAyB3D,E","file":"js/features/account_gallery-98fb66173cc6eda3111c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { Blurhash } from 'mastodon/components/blurhash';\nimport { Icon }  from 'mastodon/components/icon';\nimport { autoPlayGif, displayMedia, useBlurhash } from 'mastodon/initial_state';\n\nexport default class MediaItem extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    attachment: ImmutablePropTypes.map.isRequired,\n    displayWidth: PropTypes.number.isRequired,\n    onOpenMedia: PropTypes.func.isRequired,\n  };\n\n  state = {\n    visible: displayMedia !== 'hide_all' && !this.props.attachment.getIn(['status', 'sensitive']) || displayMedia === 'show_all',\n    loaded: false,\n  };\n\n  handleImageLoad = () => {\n    this.setState({ loaded: true });\n  };\n\n  handleMouseEnter = e => {\n    if (this.hoverToPlay()) {\n      e.target.play();\n    }\n  };\n\n  handleMouseLeave = e => {\n    if (this.hoverToPlay()) {\n      e.target.pause();\n      e.target.currentTime = 0;\n    }\n  };\n\n  hoverToPlay () {\n    return !autoPlayGif && ['gifv', 'video'].indexOf(this.props.attachment.get('type')) !== -1;\n  }\n\n  handleClick = (e, uri) => {\n    e.preventDefault();\n    const { router } = this.context;\n    router.history.push(uri);\n    // if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n    //   e.preventDefault();\n\n    //   if (this.state.visible) {\n    //     this.props.onOpenMedia(this.props.attachment);\n    //   } else {\n    //     this.setState({ visible: true });\n    //   }\n    // }\n  };\n\n  render () {\n    const { attachment, displayWidth } = this.props;\n    const { visible, loaded } = this.state;\n\n    const width  = `${Math.floor((displayWidth - 4) / 3) - 4}px`;\n    const height = width;\n    const status = attachment.get('status');\n    const title  = status.get('spoiler_text') || attachment.get('description');\n\n    let thumbnail, label, icon, content;\n\n    if (!visible) {\n      icon = (\n        <span className='account-gallery__item__icons'>\n          <Icon id='eye-slash' />\n        </span>\n      );\n    } else {\n      if (['audio', 'video'].includes(attachment.get('type'))) {\n        content = (\n          <img\n            src={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n            alt={attachment.get('description')}\n            lang={status.get('language')}\n            onLoad={this.handleImageLoad}\n          />\n        );\n\n        if (attachment.get('type') === 'audio') {\n          label = <Icon id='music' />;\n        } else {\n          label = <Icon id='play' />;\n        }\n      } else if (attachment.get('type') === 'image') {\n        const focusX = attachment.getIn(['meta', 'focus', 'x']) || 0;\n        const focusY = attachment.getIn(['meta', 'focus', 'y']) || 0;\n        const x      = ((focusX /  2) + .5) * 100;\n        const y      = ((focusY / -2) + .5) * 100;\n\n        content = (\n          <img\n            src={attachment.get('preview_url')}\n            alt={attachment.get('description')}\n            lang={status.get('language')}\n            style={{ objectPosition: `${x}% ${y}%` }}\n            onLoad={this.handleImageLoad}\n          />\n        );\n      } else if (attachment.get('type') === 'gifv') {\n        content = (\n          <video\n            className='media-gallery__item-gifv-thumbnail'\n            aria-label={attachment.get('description')}\n            title={attachment.get('description')}\n            lang={status.get('language')}\n            role='application'\n            src={attachment.get('url')}\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n            autoPlay={autoPlayGif}\n            playsInline\n            loop\n            muted\n          />\n        );\n\n        label = 'GIF';\n      }\n\n      thumbnail = (\n        <div className='media-gallery__gifv'>\n          {content}\n\n          {label && (\n            <div className='media-gallery__item__badges'>\n              <span className='media-gallery__gifv__label'>{label}</span>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className='account-gallery__item' style={{ width, height }}>\n        <a className='media-gallery__item-thumbnail' href={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}`} onClick={(e) => {this.handleClick(e, `/@${status.getIn(['account', 'acct'])}/${status.get('id')}`)}} title={title} target='_blank' rel='noopener noreferrer'>\n          <Blurhash\n            hash={attachment.get('blurhash')}\n            className={classNames('media-gallery__preview', { 'media-gallery__preview--hidden': visible && loaded })}\n            dummy={!useBlurhash}\n          />\n\n          {visible ? thumbnail : icon}\n        </a>\n      </div>\n    );\n  }\n\n}\n","import PropTypes from 'prop-types';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { lookupAccount, fetchAccount } from 'mastodon/actions/accounts';\nimport { openModal } from 'mastodon/actions/modal';\nimport ColumnBackButton from 'mastodon/components/column_back_button';\nimport { LoadMore } from 'mastodon/components/load_more';\nimport { LoadingIndicator } from 'mastodon/components/loading_indicator';\nimport ScrollContainer from 'mastodon/containers/scroll_container';\nimport BundleColumnError from 'mastodon/features/ui/components/bundle_column_error';\nimport { normalizeForLookup } from 'mastodon/reducers/accounts_map';\nimport { getAccountGallery } from 'mastodon/selectors';\n\nimport { expandAccountMediaTimeline } from '../../actions/timelines';\nimport HeaderContainer from '../account_timeline/containers/header_container';\nimport Column from '../ui/components/column';\n\nimport MediaItem from './components/media_item';\n\nconst mapStateToProps = (state, { params: { acct, id } }) => {\n  const accountId = id || state.getIn(['accounts_map', normalizeForLookup(acct)]);\n\n  if (!accountId) {\n    return {\n      isLoading: true,\n    };\n  }\n\n  return {\n    accountId,\n    isAccount: !!state.getIn(['accounts', accountId]),\n    attachments: getAccountGallery(state, accountId),\n    isLoading: state.getIn(['timelines', `account:${accountId}:media`, 'isLoading']),\n    hasMore: state.getIn(['timelines', `account:${accountId}:media`, 'hasMore']),\n    suspended: state.getIn(['accounts', accountId, 'suspended'], false),\n    blockedBy: state.getIn(['relationships', accountId, 'blocked_by'], false),\n  };\n};\n\nclass LoadMoreMedia extends ImmutablePureComponent {\n\n  static propTypes = {\n    maxId: PropTypes.string,\n    onLoadMore: PropTypes.func.isRequired,\n  };\n\n  handleLoadMore = () => {\n    this.props.onLoadMore(this.props.maxId);\n  };\n\n  render () {\n    return (\n      <LoadMore\n        disabled={this.props.disabled}\n        onClick={this.handleLoadMore}\n      />\n    );\n  }\n\n}\n\nclass AccountGallery extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.shape({\n      acct: PropTypes.string,\n      id: PropTypes.string,\n    }).isRequired,\n    accountId: PropTypes.string,\n    dispatch: PropTypes.func.isRequired,\n    attachments: ImmutablePropTypes.list.isRequired,\n    isLoading: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    isAccount: PropTypes.bool,\n    blockedBy: PropTypes.bool,\n    suspended: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n  };\n\n  state = {\n    width: 323,\n  };\n\n  _load () {\n    const { accountId, isAccount, dispatch } = this.props;\n\n    if (!isAccount) dispatch(fetchAccount(accountId));\n    dispatch(expandAccountMediaTimeline(accountId));\n  }\n\n  componentDidMount () {\n    const { params: { acct }, accountId, dispatch } = this.props;\n\n    if (accountId) {\n      this._load();\n    } else {\n      dispatch(lookupAccount(acct));\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { params: { acct }, accountId, dispatch } = this.props;\n\n    if (prevProps.accountId !== accountId && accountId) {\n      this._load();\n    } else if (prevProps.params.acct !== acct) {\n      dispatch(lookupAccount(acct));\n    }\n  }\n\n  handleScrollToBottom = () => {\n    if (this.props.hasMore) {\n      this.handleLoadMore(this.props.attachments.size > 0 ? this.props.attachments.last().getIn(['status', 'id']) : undefined);\n    }\n  };\n\n  handleScroll = e => {\n    const { scrollTop, scrollHeight, clientHeight } = e.target;\n    const offset = scrollHeight - scrollTop - clientHeight;\n\n    if (150 > offset && !this.props.isLoading) {\n      this.handleScrollToBottom();\n    }\n  };\n\n  handleLoadMore = maxId => {\n    this.props.dispatch(expandAccountMediaTimeline(this.props.accountId, { maxId }));\n  };\n\n  handleLoadOlder = e => {\n    e.preventDefault();\n    this.handleScrollToBottom();\n  };\n\n  handleOpenMedia = attachment => {\n    const { dispatch } = this.props;\n    const statusId = attachment.getIn(['status', 'id']);\n    const lang = attachment.getIn(['status', 'language']);\n\n    if (attachment.get('type') === 'video') {\n      dispatch(openModal({\n        modalType: 'VIDEO',\n        modalProps: { media: attachment, statusId, lang, options: { autoPlay: true } },\n      }));\n    } else if (attachment.get('type') === 'audio') {\n      dispatch(openModal({\n        modalType: 'AUDIO',\n        modalProps: { media: attachment, statusId, lang, options: { autoPlay: true } },\n      }));\n    } else {\n      const media = attachment.getIn(['status', 'media_attachments']);\n      const index = media.findIndex(x => x.get('id') === attachment.get('id'));\n\n      dispatch(openModal({\n        modalType: 'MEDIA',\n        modalProps: { media, index, statusId, lang },\n      }));\n    }\n  };\n\n  handleRef = c => {\n    if (c) {\n      this.setState({ width: c.offsetWidth });\n    }\n  };\n\n  render () {\n    const { attachments, isLoading, hasMore, isAccount, multiColumn, blockedBy, suspended } = this.props;\n    const { width } = this.state;\n\n    if (!isAccount) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    if (!attachments && isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    let loadOlder = null;\n\n    if (hasMore && !(isLoading && attachments.size === 0)) {\n      loadOlder = <LoadMore visible={!isLoading} onClick={this.handleLoadOlder} />;\n    }\n\n    let emptyMessage;\n\n    if (suspended) {\n      emptyMessage = <FormattedMessage id='empty_column.account_suspended' defaultMessage='Account suspended' />;\n    } else if (blockedBy) {\n      emptyMessage = <FormattedMessage id='empty_column.account_unavailable' defaultMessage='Profile unavailable' />;\n    }\n\n    return (\n      <Column>\n        <ColumnBackButton multiColumn={multiColumn} />\n\n        <ScrollContainer scrollKey='account_gallery'>\n          <div className='scrollable scrollable--flex' onScroll={this.handleScroll}>\n            <HeaderContainer accountId={this.props.accountId} />\n\n            {(suspended || blockedBy) ? (\n              <div className='empty-column-indicator'>\n                {emptyMessage}\n              </div>\n            ) : (\n              <div role='feed' className='account-gallery__container' ref={this.handleRef}>\n                {attachments.map((attachment, index) => attachment === null ? (\n                  <LoadMoreMedia key={'more:' + attachments.getIn(index + 1, 'id')} maxId={index > 0 ? attachments.getIn(index - 1, 'id') : null} onLoadMore={this.handleLoadMore} />\n                ) : (\n                  <MediaItem key={attachment.get('id')} attachment={attachment} displayWidth={width} onOpenMedia={this.handleOpenMedia} />\n                ))}\n\n                {loadOlder}\n              </div>\n            )}\n\n            {isLoading && attachments.size === 0 && (\n              <div className='scrollable__append'>\n                <LoadingIndicator />\n              </div>\n            )}\n          </div>\n        </ScrollContainer>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(AccountGallery);\n"],"sourceRoot":""}